#!/bin/bash
source ./submodules/bootstrap/logging

#-----------
# Configurations
#-----------

NGINX_LAUNCHER_DIR=${NGINX_LAUNCHER_DIR-/var/local/nginx}
NGINX_INCLUDE_RELOAD=${NGINX_INCLUDE_RELOAD-true}
NGINX_INCLUDE_PHP=${NGINX_INCLUDE_PHP-true}
NGINX_INCLUDE_MYSQL=${NGINX_INCLUDE_MYSQL-true}
NGINX_INCLUDE_POSTGRES=${NGINX_INCLUDE_POSTGRES-true}

DOCKER_SUPPORT_LXC=${DOCKER_SUPPORT_LXC-false}

export NGINX_APPS_DIR=${NGINX_APPS_DIR-/var/local/apps}
export NGINX_SITES_ENABLED_DIR=${NGINX_SITES_ENABLED_DIR-/etc/nginx/sites-enabled}
export NGINX_SITES_AVAILABLE_DIR=${NGINX_SITES_AVAILABLE_DIR-/etc/nginx/sites-available}
export NGINX_LOG_DIR=${NGINX_LOG_DIR-/var/log/nginx}
export NGINX_HTTP_PORT=${NGINX_HTTP_PORT-80}
export NGINX_SSL_PORT=${NGINX_SSL_PORT-443}

#-----------
# Install Script
#-----------

notify "Install nginx..."

mkdir -p $NGINX_LAUNCHER_DIR/files
mkdir -p $NGINX_LAUNCHER_DIR/startup.d
mkdir -p $NGINX_SITES_ENABLED_DIR $NGINX_SITES_AVAILABLE_DIR

chown -R www-data:www-data $NGINX_SITES_ENABLED_DIR
chown -R www-data:www-data $NGINX_SITES_AVAILABLE_DIR

cp ./submodules/nginx/files/nginx.dockerfile $NGINX_LAUNCHER_DIR/Dockerfile

TEMPLATE=./submodules/nginx/files/postgres_host LOCATION=$NGINX_LAUNCHER_DIR/files/postgres_host ./submodules/docker/copyif
TEMPLATE=./submodules/nginx/files/php5_fpm LOCATION=$NGINX_LAUNCHER_DIR/files/php5_fpm ./submodules/docker/copyif

if [[ ! -e $NGINX_LAUNCHER_DIR/files/do_nothing ]]; then
  printf '#!/bin/bash\n# Do nothing\n' > $NGINX_LAUNCHER_DIR/files/do_nothing
  chmod 755 $NGINX_LAUNCHER_DIR/files/do_nothing
fi

if [[ "$NGINX_INCLUDE_PHP" = true ]]; then
  notify "  -- enabling php"
  sed -i 's|# @PHP_INSTALL@|cat ./submodules/nginx/files/php_partial.dockerfile|e' $NGINX_LAUNCHER_DIR/Dockerfile
fi

if [[ "$NGINX_INCLUDE_MYSQL" = true ]]; then
  notify "  -- enabling mysql"
  sed -i 's|# @MYSQL_INSTALL@|cat ./submodules/nginx/files/mysql_partial.dockerfile|e' $NGINX_LAUNCHER_DIR/Dockerfile
fi

if [[ "$NGINX_INCLUDE_RELOAD" = true ]]; then
  TEMPLATE=./submodules/nginx/files/nginx_touch LOCATION=$NGINX_LAUNCHER_DIR/files/nginx_touch ./submodules/docker/copyif
  TEMPLATE=./submodules/nginx/files/touchandgo LOCATION=$NGINX_LAUNCHER_DIR/files/touchandgo ./submodules/docker/copyif
  TEMPLATE=./submodules/nginx/files/nginx_reload LOCATION=$NGINX_LAUNCHER_DIR/files/nginx_reload ./submodules/docker/copyif
  sed -i 's|# @RELOAD_INSTALL@|cat ./submodules/nginx/files/reload_partial.dockerfile|e' $NGINX_LAUNCHER_DIR/Dockerfile
fi

if [[ "$NGINX_INCLUDE_POSTGRES" == true ]]; then
  debug "  -- enabling postgres"
  sed -i 's|# @POSTGRES_INSTALL@|cat ./submodules/nginx/files/postgres_partial.dockerfile|e' $NGINX_LAUNCHER_DIR/Dockerfile
  NGINX_LINK_CMD="--link postgres:psqldb \\"
else
  NGINX_LINK_CMD=""
fi

LAUNCHER_DIR=$NGINX_LAUNCHER_DIR NAME=nginx ./submodules/docker/build

if [[ "$DOCKER_SUPPORT_LXC" == true ]]; then
  notify "  -- enabling LXC support"
  cp ./submodules/nginx/files/console $NGINX_LAUNCHER_DIR/console
  chmod 755 $NGINX_LAUNCHER_DIR/console
fi

NAME=nginx DIR=$NGINX_LAUNCHER_DIR \
  START=./submodules/nginx/files/_start \
  DEBUG=./submodules/nginx/files/_debug \
  ./submodules/docker/helpers

notify "DONE, Install nginx."
